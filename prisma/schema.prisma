generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String             @id @default(cuid())
  email         String             @unique
  password      String?
  name          String?
  role          UserRole           @default(VIEWER)
  avatar        String?
  emailVerified DateTime?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  accounts      Account[]
  historias     HistoriaProyecto[]
  projects      Proyecto[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Proyecto {
  id                   String               @id @default(cuid())
  titulo               String
  codigoInterno        String?
  descripcion          String
  categoria            CategoriaEnum
  estado               EstadoProyecto       @default(PLANIFICACION)
  prioridad            PrioridadEnum        @default(MEDIA)
  fechaInicio          DateTime
  fechaFin             DateTime?
  fechaEstimada        DateTime?
  presupuesto          Decimal?             @db.Decimal(15, 2)
  costoReal            Decimal?             @db.Decimal(15, 2)
  moneda               String               @default("COP")
  cliente              String
  contactoCliente      String?
  telefono             String?
  email                String?
  ubicacion            String
  coordenadas          String?
  tags                 String[]
  destacado            Boolean              @default(false)
  destacadoEnCategoria Boolean              @default(false)
  visible              Boolean              @default(true)
  ordenFrontend        Int?
  slug                 String               @unique
  metaTitle            String?
  metaDescription      String?
  createdBy            String
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  areaTotal            Decimal?             @db.Decimal(15, 2)
  toneladas            Decimal?             @db.Decimal(10, 2)
  clienteId            String?
  comentarios          ComentarioProyecto[]
  documentos           DocumentoProyecto[]
  historia             HistoriaProyecto?
  imagenes             ImagenProyecto[]
  progreso             ProgresoProyecto[]
  clienteRel           Cliente?             @relation(fields: [clienteId], references: [id])
  user                 User                 @relation(fields: [createdBy], references: [id])
  timeline             TimelineEntry[]

  @@map("proyectos")
}

model ImagenProyecto {
  id           String     @id @default(cuid())
  url          String
  urlOptimized String?
  alt          String
  titulo       String?
  descripcion  String?
  orden        Int        @default(0)
  tipo         TipoImagen @default(GALERIA)
  size         Int?
  width        Int?
  height       Int?
  format       String?
  proyectoId   String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  proyecto     Proyecto   @relation(fields: [proyectoId], references: [id], onDelete: Cascade)

  @@map("imagenes_proyecto")
}

model DocumentoProyecto {
  id          String        @id @default(cuid())
  nombre      String
  descripcion String?
  url         String
  tipo        TipoDocumento
  size        Int?
  formato     String?
  proyectoId  String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  proyecto    Proyecto      @relation(fields: [proyectoId], references: [id], onDelete: Cascade)

  @@map("documentos_proyecto")
}

model ProgresoProyecto {
  id          String    @id @default(cuid())
  fase        String
  descripcion String?
  porcentaje  Int       @default(0)
  fechaInicio DateTime?
  fechaFin    DateTime?
  completado  Boolean   @default(false)
  orden       Int       @default(0)
  proyectoId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  proyecto    Proyecto  @relation(fields: [proyectoId], references: [id], onDelete: Cascade)

  @@map("progreso_proyecto")
}

model TimelineEntry {
  id          String       @id @default(cuid())
  titulo      String
  descripcion String?
  fecha       DateTime
  tipo        TipoTimeline @default(HITO)
  importante  Boolean      @default(false)
  proyectoId  String
  createdAt   DateTime     @default(now())
  proyecto    Proyecto     @relation(fields: [proyectoId], references: [id], onDelete: Cascade)

  @@map("timeline_proyecto")
}

model ComentarioProyecto {
  id         String   @id @default(cuid())
  contenido  String
  interno    Boolean  @default(true)
  proyectoId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  proyecto   Proyecto @relation(fields: [proyectoId], references: [id], onDelete: Cascade)

  @@map("comentarios_proyecto")
}

model Servicio {
  id                   String   @id @default(cuid())
  nombre               String
  descripcion          String
  caracteristicas      String[] @default([])
  icono                String?
  imagen               String?
  orden                Int      @default(0)
  destacado            Boolean  @default(false)
  activo               Boolean  @default(true)
  slug                 String   @unique
  metaTitle            String?
  metaDescription      String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  bgGradient           String?
  color                String   @default("blue")
  equipamiento         Json?
  equipos              Json?
  expertiseDescripcion String?
  expertiseTitulo      String?
  normativas           Json?
  subtitulo            String?
  tecnologias          Json?
  titulo               String?
  
  // New fields for enhanced service detail page
  imagenesGaleria      Json?    // Array of image URLs for gallery
  estadisticas         Json?    // Key stats like years of experience, projects completed
  procesoPasos         Json?    // Process flow steps with icons and descriptions
  tablaComparativa     Json?    // Comparison table data
  videoDemostrativo    String?  // YouTube or video URL
  preguntasFrecuentes  Json?    // FAQs specific to this service
  recursosDescargables Json?    // PDFs, brochures, technical specs
  
  @@map("servicios")
}

model MiembroEquipo {
  id        String   @id @default(cuid())
  nombre    String
  cargo     String
  bio       String?
  foto      String?
  email     String?
  telefono  String?
  linkedin  String?
  orden     Int      @default(0)
  activo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("miembros_equipo")
}

model Cliente {
  id                String        @id @default(cuid())
  nombre            String
  logo              String?
  logoBlanco        String?
  descripcion       String?
  sitioWeb          String?
  sector            SectorCliente
  proyectoDestacado String?
  capacidadProyecto String?
  ubicacionProyecto String?
  mostrarEnHome     Boolean       @default(true)
  destacado         Boolean       @default(false)
  orden             Int           @default(0)
  activo            Boolean       @default(true)
  slug              String        @unique
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  proyectos         Proyecto[]

  @@map("clientes")
}

model ContactForm {
  id         String   @id @default(cuid())
  nombre     String
  email      String
  telefono   String?
  empresa    String?
  mensaje    String
  origen     String?
  leido      Boolean  @default(false)
  respondido Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("formularios_contacto")
}

model ConfiguracionSitio {
  id          String     @id @default(cuid())
  clave       String     @unique
  valor       String
  descripcion String?
  tipo        TipoConfig @default(TEXTO)
  categoria   String?
  updatedAt   DateTime   @updatedAt

  @@map("configuracion_sitio")
}

model CategoriaProyecto {
  id                  String        @id @default(cuid())
  key                 CategoriaEnum @unique
  nombre              String
  descripcion         String?
  slug                String        @unique
  imagenCover         String?
  icono               String?
  color               String?
  colorSecundario     String?
  metaTitle           String?
  metaDescription     String?
  orden               Int           @default(0)
  visible             Boolean       @default(true)
  destacada           Boolean       @default(false)
  totalProyectos      Int           @default(0)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  overlayColor        String?
  overlayOpacity      Float?        @default(0.0)
  beneficios          Json?
  descripcionAmpliada String?
  estadisticas        Json?
  procesoTrabajo      Json?
  casosExitoIds       Json?
  imagenBanner        String?

  @@map("categorias_proyecto")
}

model HistoriaProyecto {
  id                  String   @id @default(cuid())
  proyectoId          String   @unique
  activo              Boolean  @default(false)
  contexto            String?
  desafios            Json?
  problemasIniciales  String?
  enfoque             String?
  solucionTecnica     String?
  innovaciones        Json?
  equipoEspecialista  Json?
  metodologia         String?
  fasesEjecucion      Json?
  tiempoTotal         String?
  recursos            Json?
  resultados          Json?
  impactoCliente      String?
  reconocimientos     Json?
  datosInteres        Json?
  leccionesAprendidas String?
  valorAgregado       String?
  testimonioCliente   String?
  testimonioEquipo    String?
  imagenDestacada     String?
  videoUrl            String?
  infografias         Json?
  tagsTecnicos        Json?
  dificultadTecnica   Int?
  innovacionNivel     Int?
  resumenCorto        String?
  tituloAlternativo   String?
  fechaCreacion       DateTime @default(now())
  fechaActualizacion  DateTime @updatedAt
  creadoPor           String
  imagenesDesafio     Json?
  imagenesResultado   Json?
  imagenesSolucion    Json?
  creador             User     @relation(fields: [creadoPor], references: [id])
  proyecto            Proyecto @relation(fields: [proyectoId], references: [id], onDelete: Cascade)

  @@map("historias_proyecto")
}

enum UserRole {
  ADMIN
  EDITOR
  VIEWER
}

enum SectorCliente {
  INDUSTRIAL
  COMERCIAL
  CONSTRUCCION
  INSTITUCIONAL
  GOBIERNO
  ENERGIA
  MINERIA
  SALUD
  OTRO
}

enum CategoriaEnum {
  CENTROS_COMERCIALES
  EDIFICIOS
  INDUSTRIA
  PUENTES_VEHICULARES
  PUENTES_PEATONALES
  ESCENARIOS_DEPORTIVOS
  CUBIERTAS_Y_FACHADAS
  ESTRUCTURAS_MODULARES
  OIL_AND_GAS
  OTRO
}

enum EstadoProyecto {
  PLANIFICACION
  EN_PROGRESO
  PAUSADO
  COMPLETADO
  CANCELADO
}

enum PrioridadEnum {
  BAJA
  MEDIA
  ALTA
  URGENTE
}

enum TipoImagen {
  PORTADA
  GALERIA
  PROCESO
  ANTES_DESPUES
  PLANOS
}

enum TipoDocumento {
  CONTRATO
  PLANOS
  ESPECIFICACIONES
  REPORTES
  CERTIFICADOS
  FACTURACION
  OTRO
}

enum TipoTimeline {
  INICIO
  HITO
  ENTREGA
  PROBLEMA
  SOLUCION
  FINALIZACION
}

enum TipoConfig {
  TEXTO
  NUMERO
  BOOLEAN
  JSON
  URL
  EMAIL
}
